Import("ENV")


ENV.Append(
    BUILDERS={
        "HEXBuilder": Builder(
            action=Action(
                '${OBJCOPY} -O ihex "${SOURCE}" "${TARGET}"',
                "${HEXCOMSTR}",
            ),
            suffix=".hex",
            src_suffix=".elf",
        ),
        "BINBuilder": Builder(
            action=Action(
                '${OBJCOPY} -O binary -S "${SOURCE}" "${TARGET}"',
                "${BINCOMSTR}",
            ),
            suffix=".bin",
            src_suffix=".elf",
        ),
        "DFUBuilder": Builder(
            action=Action(
                '${PYTHON3} ./scripts/bin2dfu.py -i "${SOURCE}" -o "${TARGET}" -a ${IMAGE_BASE_ADDRESS} -l "Flipper Zero F${TARGET_HW}"',
                "${DFUCOMSTR}",
            ),
            suffix=".dfu",
            src_suffix=".bin",
        ),
        "ELFStripper": Builder(
            action=Action(
                "${STRIPCOM}",
                "${STRIPCOMSTR}",
            ),
            suffix=".elf",
            src_suffix=".elf",
        ),
        "Flasher": Builder(
            action=[
                Action(
                    'openocd ${OPENOCD_OPTS} -c "program ${SOURCE.posix} reset exit ${IMAGE_BASE_ADDRESS}"',
                    "${FLASHCOMSTR}",
                ),
                Touch("${TARGET}"),
            ],
            suffix=".flash",
            src_suffix=".bin",
        ),
    }
)

if not ENV["VERBOSE"]:
    ENV.SetDefault(
        HEXCOMSTR="\tHEX\t${TARGET}",
        BINCOMSTR="\tBIN\t${TARGET}",
        DFUCOMSTR="\tDFU\t${TARGET}",
        FLASHCOMSTR="\tFLASH\t${SOURCE}",
    )
